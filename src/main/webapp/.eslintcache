[{"C:\\Users\\Juste\\Google Drive\\@ MANO\\Mokslai\\@KEA\\AP Computer Science\\3rd. Semester\\Programming 2\\@Projects\\Mandatory Project 1 - Storm Rider\\stormrider_2020\\src\\main\\webapp\\src\\index.js":"1","C:\\Users\\Juste\\Google Drive\\@ MANO\\Mokslai\\@KEA\\AP Computer Science\\3rd. Semester\\Programming 2\\@Projects\\Mandatory Project 1 - Storm Rider\\stormrider_2020\\src\\main\\webapp\\src\\App.js":"2","C:\\Users\\Juste\\Google Drive\\@ MANO\\Mokslai\\@KEA\\AP Computer Science\\3rd. Semester\\Programming 2\\@Projects\\Mandatory Project 1 - Storm Rider\\stormrider_2020\\src\\main\\webapp\\src\\reportWebVitals.js":"3","C:\\Users\\Juste\\Google Drive\\@ MANO\\Mokslai\\@KEA\\AP Computer Science\\3rd. Semester\\Programming 2\\@Projects\\Mandatory Project 1 - Storm Rider\\stormrider_2020\\src\\main\\webapp\\src\\components\\NavBar.js":"4","C:\\Users\\Juste\\Google Drive\\@ MANO\\Mokslai\\@KEA\\AP Computer Science\\3rd. Semester\\Programming 2\\@Projects\\Mandatory Project 1 - Storm Rider\\stormrider_2020\\src\\main\\webapp\\src\\components\\ProductList.js":"5","C:\\Users\\Juste\\Google Drive\\@ MANO\\Mokslai\\@KEA\\AP Computer Science\\3rd. Semester\\Programming 2\\@Projects\\Mandatory Project 1 - Storm Rider\\stormrider_2020\\src\\main\\webapp\\src\\components\\Welcome.js":"6","C:\\Users\\Juste\\Google Drive\\@ MANO\\Mokslai\\@KEA\\AP Computer Science\\3rd. Semester\\Programming 2\\@Projects\\Mandatory Project 1 - Storm Rider\\stormrider_2020\\src\\main\\webapp\\src\\components\\AboutUs.js":"7"},{"size":517,"mtime":1607869739135,"results":"8","hashOfConfig":"9"},{"size":1055,"mtime":1607869738932,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1607869739136,"results":"11","hashOfConfig":"9"},{"size":3353,"mtime":1607869738936,"results":"12","hashOfConfig":"9"},{"size":4691,"mtime":1607869738937,"results":"13","hashOfConfig":"9"},{"size":1747,"mtime":1607869738937,"results":"14","hashOfConfig":"9"},{"size":1521,"mtime":1607869738935,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"t4t7lj",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"18"},"C:\\Users\\Juste\\Google Drive\\@ MANO\\Mokslai\\@KEA\\AP Computer Science\\3rd. Semester\\Programming 2\\@Projects\\Mandatory Project 1 - Storm Rider\\stormrider_2020\\src\\main\\webapp\\src\\index.js",[],["37","38"],"C:\\Users\\Juste\\Google Drive\\@ MANO\\Mokslai\\@KEA\\AP Computer Science\\3rd. Semester\\Programming 2\\@Projects\\Mandatory Project 1 - Storm Rider\\stormrider_2020\\src\\main\\webapp\\src\\App.js",["39"],"import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport {Container, Row, Col} from \"react-bootstrap\";\r\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\r\n\r\nimport Welcome from \"./components/Welcome\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport ProductList from \"./components/ProductList\";\r\nimport AboutUs from \"./components/AboutUs\";\r\nimport React from \"react\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <Router>\r\n            <NavBar/>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Switch>\r\n                            <Route path=\"/:language\" exact component={Welcome}/>\r\n                            <Route path=\"/about-us/:language/:aboutUs\" component={AboutUs}/>\r\n                            <Route path=\"/product-list/:language/:categoryId\" component={ProductList}/>\r\n                        </Switch>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Juste\\Google Drive\\@ MANO\\Mokslai\\@KEA\\AP Computer Science\\3rd. Semester\\Programming 2\\@Projects\\Mandatory Project 1 - Storm Rider\\stormrider_2020\\src\\main\\webapp\\src\\reportWebVitals.js",[],"C:\\Users\\Juste\\Google Drive\\@ MANO\\Mokslai\\@KEA\\AP Computer Science\\3rd. Semester\\Programming 2\\@Projects\\Mandatory Project 1 - Storm Rider\\stormrider_2020\\src\\main\\webapp\\src\\components\\NavBar.js",["40","41","42","43"],"import React from 'react';\r\nimport logo from '../header-logo.png'\r\n\r\nimport {Navbar, Nav, Button} from \"react-bootstrap\";\r\nimport {Link} from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\n\r\n//  DECLARATION OF GLOBAL LANGUAGE VARIABLE\r\n//============================================\r\n\r\nvar language = 'en';\r\n\r\n\r\n\r\n\r\nclass NavBar extends React.Component {\r\n\r\n//  CONSTRUCTOR\r\n//=====================================================================================================================\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {categories: []};\r\n    }\r\n\r\n//  GET REQUEST\r\n//=====================================================================================================================\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8888/api/category/all\")\r\n            .then(response => response.data)\r\n            .then((data) => {\r\n                this.setState({categories : data});\r\n            })\r\n    }\r\n\r\n//  RENDER TRANSLATIONS\r\n//=====================================================================================================================\r\n\r\n    renderAboutUs(language) {\r\n        switch(language) {\r\n            case 'en':\r\n                return 'About Us';\r\n                break;\r\n            case 'is':\r\n                return 'Um Okkur';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n//  RENDER METHOD\r\n//=====================================================================================================================\r\n\r\n    render() {\r\n        return (\r\n            <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Link className=\"navbar-brand\" to={\r\n                    {\r\n                        pathname: \"/\" + language\r\n                    }\r\n                }><img src={logo} width=\"150\"/></Link>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                <>\r\n                {\r\n                    this.state.categories.map((category) =>\r\n                    <>\r\n                    {\r\n                        category.categoryLanguages.map((categoryLanguage) =>\r\n                        <>\r\n                        {\r\n                            (categoryLanguage.appLanguageCode === language) ?\r\n                                <Link className=\"nav-link\" to={\r\n                                    {\r\n                                        pathname: \"/product-list/\" + language + \"/\" + categoryLanguage.categoryId\r\n                                    }\r\n                                }>{categoryLanguage.name}</Link>\r\n                            :\r\n                            null\r\n                        }\r\n                        </>\r\n                        )\r\n                    }\r\n                    </>\r\n                    )\r\n                }\r\n                </>\r\n                <Link className=\"nav-link\" to={\r\n                    {\r\n                        pathname: \"/about-us/\" + language + \"/\" + this.renderAboutUs(language)\r\n                    }\r\n                }>{this.renderAboutUs(language)}</Link>\r\n                </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","C:\\Users\\Juste\\Google Drive\\@ MANO\\Mokslai\\@KEA\\AP Computer Science\\3rd. Semester\\Programming 2\\@Projects\\Mandatory Project 1 - Storm Rider\\stormrider_2020\\src\\main\\webapp\\src\\components\\ProductList.js",["44","45","46","47","48","49","50"],"import React from 'react';\r\nimport bridle from '../images/products/bridle.png'\r\nimport horseshoes from '../images/products/horseshoes.jpg'\r\nimport saddle1 from '../images/products/saddle1.png'\r\nimport saddle2 from '../images/products/saddle2.jpg'\r\n\r\nimport axios from 'axios';\r\nimport {CardColumns, Card, Button, Jumbotron} from \"react-bootstrap\";\r\n\r\n\r\n//  DECLARATION OF GLOBAL LANGUAGE VARIABLE\r\n//============================================\r\n\r\nclass ProductList extends React.Component {\r\n\r\n//  METHODS FOR RETRIEVING VALUES FROM PATH\r\n//=====================================================================================================================\r\n\r\n    getCategoryId() {\r\n        const categoryId = this.props.match.params.categoryId;\r\n        return categoryId;\r\n    }\r\n\r\n    getLanguage() {\r\n        const language = this.props.match.params.language;\r\n        return language;\r\n    }\r\n\r\n    getImage(link) {\r\n        switch(link) {\r\n            case 'bridle.png':\r\n                return bridle;\r\n                break;\r\n            case 'horseshoes.jpg':\r\n                return horseshoes;\r\n                break;\r\n            case 'saddle1.png':\r\n                return saddle1;\r\n                break;\r\n            case 'saddle2.jpg':\r\n                return saddle2;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n//  CONSTRUCTOR\r\n//=====================================================================================================================\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {categories: []};\r\n    }\r\n\r\n//  GET REQUEST\r\n//=====================================================================================================================\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8888/api/category/all\") // the ID needs to be passed from NavBar\r\n            .then(response => response.data)\r\n            .then((data) => {\r\n                this.setState({categories : data});\r\n            })\r\n    }\r\n\r\n//  RENDER METHODS\r\n//=====================================================================================================================\r\n\r\n    render() {\r\n        return (\r\n            <CardColumns className=\"card-frame\">\r\n            {\r\n                this.state.categories.map((category) =>\r\n                <>\r\n                {\r\n                    (category.categoryId == this.getCategoryId()) ?\r\n                    <>\r\n                    {\r\n                        category.subcategories.map((subcategory) =>\r\n                        <>\r\n                        {\r\n                            subcategory.productGroups.map((productGroup) =>\r\n                                <Card style={{width: '18rem'}}>\r\n                                    <Card.Img variant=\"top\" style={{height: '20rem'}} src={this.getImage(productGroup.productGroupImage.image)}/>\r\n                                    <Card.Body>\r\n                                        {\r\n                                            productGroup.productGroupLanguages.map((productGroupLanguage) =>\r\n                                        <>\r\n                                        {\r\n                                            (productGroupLanguage.appLanguageCode == this.getLanguage()) ?\r\n                                                <div>\r\n                                                    <Card.Text className=\"card-title\">{productGroupLanguage.productGroupName}</Card.Text>\r\n                                                    <Card.Text className=\"card-description\">{productGroupLanguage.productGroupDescription}</Card.Text>\r\n                                                </div>\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                        </>\r\n                                            )\r\n                                        }\r\n                                        <Card.Text className=\"card-description\">Price: {productGroup.basePrice + productGroup.vat}</Card.Text>\r\n                                        <Button variant=\"outline-dark\" block>Go somewhere</Button>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            )\r\n                        }\r\n                        </>\r\n                        )\r\n                    }\r\n                    </>\r\n                    :\r\n                    null\r\n                }\r\n                </>\r\n                )\r\n            }\r\n            </CardColumns>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ProductList;",["51","52"],"C:\\Users\\Juste\\Google Drive\\@ MANO\\Mokslai\\@KEA\\AP Computer Science\\3rd. Semester\\Programming 2\\@Projects\\Mandatory Project 1 - Storm Rider\\stormrider_2020\\src\\main\\webapp\\src\\components\\Welcome.js",["53","54","55","56"],"import React from 'react';\r\nimport {Jumbotron, Container} from \"react-bootstrap\";\r\n\r\n\r\n\r\nclass Welcome extends React.Component {\r\n\r\n//  METHODS FOR RETRIEVING VALUES FROM PATH\r\n//=====================================================================================================================\r\n\r\n    getLanguage() {\r\n        const language = this.props.match.params.language;\r\n        return language;\r\n    }\r\n\r\n\r\n//  RENDER TRANSLATIONS\r\n//=====================================================================================================================\r\n\r\n    renderWelcome(language) {\r\n        switch(language) {\r\n            case 'en':\r\n                return 'Welcome';\r\n                break;\r\n            case 'is':\r\n                return 'Bulbulbul';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    renderWelcomeMessage(language) {\r\n        switch(language) {\r\n            case 'en':\r\n                return 'Welcome message from STORMRIDER';\r\n                break;\r\n            case 'is':\r\n                return 'Bulbulbul asdas asfsdf asfgwthyt STORMRIDER';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n//  RENDER METHOD\r\n//=====================================================================================================================\r\n\r\n    render() {\r\n        return (\r\n            <Jumbotron>\r\n                <Container>\r\n                    <h1 className=\"welcome\">{this.renderWelcome(this.getLanguage())}</h1>\r\n                    <p className=\"welcome-message\">{this.renderWelcomeMessage(this.getLanguage())}</p>\r\n                </Container>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Welcome;\r\n","C:\\Users\\Juste\\Google Drive\\@ MANO\\Mokslai\\@KEA\\AP Computer Science\\3rd. Semester\\Programming 2\\@Projects\\Mandatory Project 1 - Storm Rider\\stormrider_2020\\src\\main\\webapp\\src\\components\\AboutUs.js",["57","58"],"import React from 'react';\r\nimport {Container, Jumbotron} from \"react-bootstrap\";\r\n\r\n\r\n\r\nclass AboutUs extends React.Component {\r\n\r\n//  METHODS FOR RETRIEVING VALUES FROM PATH\r\n//=====================================================================================================================\r\n\r\n    getLanguage() {\r\n        const language = this.props.match.params.language;\r\n        return language;\r\n    }\r\n\r\n    getAboutUs() {\r\n        const aboutUs = this.props.match.params.aboutUs;\r\n        return aboutUs;\r\n    }\r\n\r\n//  RENDER TRANSLATIONS\r\n//=====================================================================================================================\r\n\r\n    renderAboutUsMessage(language) {\r\n        switch(language) {\r\n            case 'en':\r\n                return 'Message about STORMRIDER';\r\n                break;\r\n            case 'is':\r\n                return 'Bulbulbul asfgwthyt STORMRIDER';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n//  RENDER METHOD\r\n//=====================================================================================================================\r\n\r\n    render() {\r\n        return (\r\n            <Jumbotron>\r\n                <Container>\r\n                    <h1 className=\"welcome\">{this.getAboutUs()}</h1>\r\n                    <p className=\"welcome-message\">{this.renderAboutUsMessage(this.getLanguage())}</p>\r\n                </Container>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutUs;",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":5,"column":49,"nodeType":"65","messageId":"66","endLine":5,"endColumn":53},{"ruleId":"63","severity":1,"message":"67","line":4,"column":22,"nodeType":"65","messageId":"66","endLine":4,"endColumn":28},{"ruleId":"68","severity":1,"message":"69","line":45,"column":17,"nodeType":"70","messageId":"71","endLine":45,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":48,"column":17,"nodeType":"70","messageId":"71","endLine":48,"endColumn":23},{"ruleId":"72","severity":1,"message":"73","line":64,"column":19,"nodeType":"74","endLine":64,"endColumn":48},{"ruleId":"63","severity":1,"message":"75","line":8,"column":36,"nodeType":"65","messageId":"66","endLine":8,"endColumn":45},{"ruleId":"68","severity":1,"message":"69","line":33,"column":17,"nodeType":"70","messageId":"71","endLine":33,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":36,"column":17,"nodeType":"70","messageId":"71","endLine":36,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":39,"column":17,"nodeType":"70","messageId":"71","endLine":39,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":42,"column":17,"nodeType":"70","messageId":"71","endLine":42,"endColumn":23},{"ruleId":"76","severity":1,"message":"77","line":77,"column":42,"nodeType":"78","messageId":"79","endLine":77,"endColumn":44},{"ruleId":"76","severity":1,"message":"77","line":91,"column":83,"nodeType":"78","messageId":"79","endLine":91,"endColumn":85},{"ruleId":"59","replacedBy":"80"},{"ruleId":"61","replacedBy":"81"},{"ruleId":"68","severity":1,"message":"69","line":24,"column":17,"nodeType":"70","messageId":"71","endLine":24,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":27,"column":17,"nodeType":"70","messageId":"71","endLine":27,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":37,"column":17,"nodeType":"70","messageId":"71","endLine":37,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":40,"column":17,"nodeType":"70","messageId":"71","endLine":40,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":28,"column":17,"nodeType":"70","messageId":"71","endLine":28,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":31,"column":17,"nodeType":"70","messageId":"71","endLine":31,"endColumn":23},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Jumbotron' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["82"],["83"],"no-global-assign","no-unsafe-negation"]